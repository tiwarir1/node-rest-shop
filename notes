https://www.youtube.com/watch?v=blQ60skPzl0&index=2&list=PL55RiY5tL51q4D-B63KBnygU6opNPFk_q

npm install --save express

app.use -> use as a method sets up a middleware. So, an incoming request has to go through use and whatever we pass to it.
app.use((request, response, next)) - next is also a function here that'll execute the request to move to a next middleware in line. if you don't execute it, the request will not go there.

module.exports = app; - it'll send the return values of app.js to any file that is importing app.js


to test the http requests, install the postman application. getpostman.com

_____________

https://www.youtube.com/watch?v=FV1Ugv1Temg&index=3&list=PL55RiY5tL51q4D-B63KBnygU6opNPFk_q

const router = express.Router();
router is a sub package in express?? it helps us in reaching out and managing several endpoints with HTTP verbs

______________

https://www.youtube.com/watch?v=UVAMha41dwo&list=PL55RiY5tL51q4D-B63KBnygU6opNPFk_q&index=4

npm install --save-dev nodemon

npm install --save morgan -> logging package for node.js

_____________

https://www.youtube.com/watch?v=zoSJ3bNGPp0&index=5&list=PL55RiY5tL51q4D-B63KBnygU6opNPFk_q

npm install --save body-parser

we need to know which data different api endpoints need to work correctly
______________

https://www.youtube.com/watch?v=WDrU305J1yw&index=6&list=PL55RiY5tL51q4D-B63KBnygU6opNPFk_q


npm install --save mongoose

created a mongodb atlas account. then, a cluster and whitelisted the IP. Click on connect and copy the connection code - 3.4 or older

click on connect and use the URL to connect to your application. We will edit it in the file. Check file (app.jsa nd nodemon.json) for more info

mongoose.connect(path, username, password(in this case, we used a separate environment to solve hard coded password problem))

mongoose will need models of how data will be stored and manipulated. check files in api/models/ for the files
then include it in the routes/products.js file. Create a new schema in this file and you can remove the old file

Scema can be wrapped into a model
Schema : schema is the layout or design of the object you want to use
Model : is the object itself, that gives you the constructor to build the object based on the schema




